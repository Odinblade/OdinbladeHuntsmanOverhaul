Version 1
SubGoalCombiner SGC_AND
INITSECTION
DB_OBHUN_NTH_STATUS("OdinHUN_VULNERABLE");
DB_OBHUN_NTH_STATUS("OdinHUN_VULNERABLE_DOUBLE");

KBSECTION
IF
NRD_OnPrepareHit(_Target, _Dealer, _Damage, _HitHandle)
AND
NOT DB_OBHUN_SA(_Dealer)
AND
HasActiveStatus(_Dealer, "OdinHUN_LETHALFOCUS", 1)
AND
GetPosition(_Dealer, _X, _Y, _Z)
THEN
DB_OBHUN_SA(_Dealer);
NRD_ProjectilePrepareLaunch();
NRD_ProjectileSetString("SkillId", "Projectile_IceFan");
NRD_ProjectileSetVector3("TargetPosition", _X, _Y, _Z);
NRD_ProjectileSetGuidString("SourcePosition", _Target);
NRD_ProjectileSetGuidString("Caster", _Dealer);
NRD_ProjectileSetGuidString("Target", _Target);
NRD_ProjectileLaunch();
ProcObjectTimer(_Dealer, "OBHUN_SA_Fire", 500);

PROC
ProcObjectTimerFinished(_Character, "OBHUN_SA_Fire")
THEN
NOT DB_OBHUN_SA(_Character);




//SKILL HUNTER'S MARK
IF
SkillActivated(_Character, "Shout_OdinHUN_NowhereToHide")
THEN
DB_OBHUN_NTH(_Character);

IF
SkillDeactivated(_Character, "Shout_OdinHUN_NowhereToHide")
AND
DB_OBHUN_NTH(_Character)
THEN
NOT DB_OBHUN_NTH(_Character);

IF
ObjectEnteredCombat((CHARACTERGUID)_Hunter, _Combat)
AND
DB_OBHUN_NTH(_Hunter)
THEN
DB_OBHUN_NTH_TEMP_FARTHEST(_Hunter, _Hunter, 0.0);
SetStoryEvent(_Hunter, "OBHUN_NTH_START");

IF
StoryEvent((CHARACTERGUID)_Hunter, "OBHUN_NTH_START")
AND
DB_CombatCharacters(_Enemy, _CombatID)
AND
CharacterIsDead(_Enemy, 0)
AND
HasActiveStatus(_Enemy, "OdinHUN_VULNERABLE", 0)
AND
HasActiveStatus(_Enemy, "OdinHUN_VULNERABLE_DOUBLE", 0)
AND
CharacterIsEnemy(_Hunter, _Enemy, 1)
AND
GetDistanceTo(_Hunter, _Enemy, _Distance)
THEN
OBHUN_Enemies_Found(_Enemy, _Hunter, _Distance);

PROC
OBHUN_Enemies_Found((CHARACTERGUID)_Enemy, (CHARACTERGUID)_Hunter, (REAL)_Distance)
AND
DB_OBHUN_NTH_TEMP_FARTHEST(_LastEnemy, _Hunter, _LastDistance)
AND
_LastDistance <= _Distance
THEN
NOT DB_OBHUN_NTH_TEMP_FARTHEST(_LastEnemy, _Hunter, _LastDistance);
DB_OBHUN_NTH_TEMP_FARTHEST(_Enemy, _Hunter, _Distance);

IF
StoryEvent((CHARACTERGUID)_Hunter, "OBHUN_NTH_START")
AND
DB_OBHUN_NTH(_Hunter)
AND
DB_OBHUN_NTH_TEMP_FARTHEST(_Enemy, _Hunter, _Distance)
THEN
ApplyStatus(_Enemy, "OdinHUN_VULNERABLE", 12.0, 1, _Hunter);

IF
CharacterUsedSkill(_Hunter, "Shout_OdinHUN_NowhereToHide", _, _)
AND
DB_OBHUN_NTH(_Hunter)
AND
DB_OBHUN_NTH_TEMP_FARTHEST(_Enemy, _Hunter, _Distance)
THEN
RemoveStatus(_Enemy, "OdinHUN_VULNERABLE");
ApplyStatus(_Enemy, "OdinHUN_VULNERABLE_DOUBLE", 12.0, 1, _Hunter);

IF
ObjectLeftCombat((CHARACTERGUID)_Hunter, _Combat)
AND
DB_OBHUN_NTH_TEMP_FARTHEST(_Enemy, _Hunter, _Distance)
THEN
NOT DB_OBHUN_NTH_TEMP_FARTHEST(_Enemy, _Hunter, _Distance);
RemoveStatus(_Enemy, "OdinHUN_VULNERABLE");
RemoveStatus(_Enemy, "OdinHUN_VULNERABLE_DOUBLE");

IF
CharacterStatusRemoved(_Enemy, _Status, _)
AND
DB_OBHUN_NTH_STATUS(_Status)
AND
DB_OBHUN_NTH_TEMP_FARTHEST(_Enemy, _Hunter, _Distance)
THEN
NOT DB_OBHUN_NTH_TEMP_FARTHEST(_Enemy, _Hunter, _Distance);

IF
CombatEnded(_CombatID)
THEN
SysClear("DB_OBHUN_NTH_TEMP_FARTHEST", 3);

// IF
// NRD_OnStatusAttempt(_Target, "OdinHUN_HIT_TRAP_ICE", _Handle, _Dealer)
// THEN
// NRD_StatusPreventApply(_Target, _Handle, 1);
// ApplyStatus(_Target, "OdinHUN_DMG_TRAP_ICE", 0.0, 1, _Dealer);

// IF
// // ItemWentOnStage(_Trap, 1)
// // ItemTemplateDestroyed("e805d0d2-a522-4189-85dc-7d45b724f77e", _Trap)
// Object
// AND
// NRD_ItemGetStatsId((ITEMGUID)_Trap, _StatsId)
// AND
// GetClosestAlivePlayer(_Trap, _Character, _Dist)
// THEN
// CharacterStatusText(_Character, _StatsId);

IF
CharacterUsedSkillAtPosition(_Character, _X, _Y, _Z, "Projectile_OdinHUN_Trap_Ice", _, _)
THEN
DB_OBHUN_Trap_Spawn(_Character, _X, _Y, _Z);
ProcObjectTimer(_Character, "OdinHUN_TRAP_SPAWN", 2000);

PROC
ProcObjectTimerFinished((CHARACTERGUID)_Character, "OdinHUN_TRAP_SPAWN")
AND
DB_OBHUN_Trap_Spawn(_Character, _X, _Y, _Z)
AND
CreateItemTemplateAtPosition("e805d0d2-a522-4189-85dc-7d45b724f77e", _X, _Y, _Z, _Trap)
AND
CharacterGetLevel(_Character, _Level)
THEN
ItemLevelUpTo(_Trap, _Level);
NOT DB_OBHUN_Trap_Spawn(_Character, _X, _Y, _Z);
ItemSetOwner(_Trap, _Character);

IF
CharacterStatusApplied(_Target, "OdinHUN_HIT_TRAP_ICE", _Trap)
AND
ItemGetOwner((ITEMGUID)_Trap, _TrapOwner)
THEN
ApplyStatus(_Target, "OdinHUN_DMG_TRAP_ICE", 1.0, 1, _TrapOwner);

EXITSECTION

ENDEXITSECTION
